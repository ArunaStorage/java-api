// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aruna/api/dataproxy/services/v2/dataproxy_service.proto

// Protobuf Java Version: 3.25.3
package com.aruna.api.dataproxy.services.v2;

public interface PullReplicationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aruna.api.dataproxy.services.v2.PullReplicationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.aruna.api.dataproxy.services.v2.Handshake handshake = 5 [json_name = "handshake"];</code>
   * @return Whether the handshake field is set.
   */
  boolean hasHandshake();
  /**
   * <code>.aruna.api.dataproxy.services.v2.Handshake handshake = 5 [json_name = "handshake"];</code>
   * @return The handshake.
   */
  com.aruna.api.dataproxy.services.v2.Handshake getHandshake();
  /**
   * <code>.aruna.api.dataproxy.services.v2.Handshake handshake = 5 [json_name = "handshake"];</code>
   */
  com.aruna.api.dataproxy.services.v2.HandshakeOrBuilder getHandshakeOrBuilder();

  /**
   * <code>.aruna.api.dataproxy.services.v2.ObjectInfo object_info = 1 [json_name = "objectInfo"];</code>
   * @return Whether the objectInfo field is set.
   */
  boolean hasObjectInfo();
  /**
   * <code>.aruna.api.dataproxy.services.v2.ObjectInfo object_info = 1 [json_name = "objectInfo"];</code>
   * @return The objectInfo.
   */
  com.aruna.api.dataproxy.services.v2.ObjectInfo getObjectInfo();
  /**
   * <code>.aruna.api.dataproxy.services.v2.ObjectInfo object_info = 1 [json_name = "objectInfo"];</code>
   */
  com.aruna.api.dataproxy.services.v2.ObjectInfoOrBuilder getObjectInfoOrBuilder();

  /**
   * <pre>
   * If no ack is received, the chunk will be resent
   * </pre>
   *
   * <code>.aruna.api.dataproxy.services.v2.Chunk chunk = 2 [json_name = "chunk"];</code>
   * @return Whether the chunk field is set.
   */
  boolean hasChunk();
  /**
   * <pre>
   * If no ack is received, the chunk will be resent
   * </pre>
   *
   * <code>.aruna.api.dataproxy.services.v2.Chunk chunk = 2 [json_name = "chunk"];</code>
   * @return The chunk.
   */
  com.aruna.api.dataproxy.services.v2.Chunk getChunk();
  /**
   * <pre>
   * If no ack is received, the chunk will be resent
   * </pre>
   *
   * <code>.aruna.api.dataproxy.services.v2.Chunk chunk = 2 [json_name = "chunk"];</code>
   */
  com.aruna.api.dataproxy.services.v2.ChunkOrBuilder getChunkOrBuilder();

  /**
   * <code>.aruna.api.dataproxy.services.v2.Empty finish_message = 3 [json_name = "finishMessage"];</code>
   * @return Whether the finishMessage field is set.
   */
  boolean hasFinishMessage();
  /**
   * <code>.aruna.api.dataproxy.services.v2.Empty finish_message = 3 [json_name = "finishMessage"];</code>
   * @return The finishMessage.
   */
  com.aruna.api.dataproxy.services.v2.Empty getFinishMessage();
  /**
   * <code>.aruna.api.dataproxy.services.v2.Empty finish_message = 3 [json_name = "finishMessage"];</code>
   */
  com.aruna.api.dataproxy.services.v2.EmptyOrBuilder getFinishMessageOrBuilder();

  /**
   * <code>.aruna.api.dataproxy.services.v2.Skip skip = 4 [json_name = "skip"];</code>
   * @return Whether the skip field is set.
   */
  boolean hasSkip();
  /**
   * <code>.aruna.api.dataproxy.services.v2.Skip skip = 4 [json_name = "skip"];</code>
   * @return The skip.
   */
  com.aruna.api.dataproxy.services.v2.Skip getSkip();
  /**
   * <code>.aruna.api.dataproxy.services.v2.Skip skip = 4 [json_name = "skip"];</code>
   */
  com.aruna.api.dataproxy.services.v2.SkipOrBuilder getSkipOrBuilder();

  com.aruna.api.dataproxy.services.v2.PullReplicationResponse.MessageCase getMessageCase();
}
